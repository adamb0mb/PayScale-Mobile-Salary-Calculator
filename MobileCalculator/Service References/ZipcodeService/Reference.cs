//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace MobileCalculator.ZipcodeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.webserviceX.NET", ConfigurationName="ZipcodeService.USZipSoap")]
    public interface USZipSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.webserviceX.NET/GetInfoByZIP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetInfoByZIP(string USZip, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetInfoByZIP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.webserviceX.NET/GetInfoByCity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetInfoByCity(string USCity, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetInfoByCity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.webserviceX.NET/GetInfoByState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetInfoByState(string USState, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetInfoByState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.webserviceX.NET/GetInfoByAreaCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetInfoByAreaCode(string USAreaCode, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetInfoByAreaCode(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface USZipSoapChannel : MobileCalculator.ZipcodeService.USZipSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInfoByZIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInfoByZIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInfoByCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInfoByCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInfoByStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInfoByStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInfoByAreaCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInfoByAreaCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class USZipSoapClient : System.ServiceModel.ClientBase<MobileCalculator.ZipcodeService.USZipSoap>, MobileCalculator.ZipcodeService.USZipSoap {
        
        private BeginOperationDelegate onBeginGetInfoByZIPDelegate;
        
        private EndOperationDelegate onEndGetInfoByZIPDelegate;
        
        private System.Threading.SendOrPostCallback onGetInfoByZIPCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInfoByCityDelegate;
        
        private EndOperationDelegate onEndGetInfoByCityDelegate;
        
        private System.Threading.SendOrPostCallback onGetInfoByCityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInfoByStateDelegate;
        
        private EndOperationDelegate onEndGetInfoByStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetInfoByStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInfoByAreaCodeDelegate;
        
        private EndOperationDelegate onEndGetInfoByAreaCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetInfoByAreaCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public USZipSoapClient() {
        }
        
        public USZipSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public USZipSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public USZipSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public USZipSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetInfoByZIPCompletedEventArgs> GetInfoByZIPCompleted;
        
        public event System.EventHandler<GetInfoByCityCompletedEventArgs> GetInfoByCityCompleted;
        
        public event System.EventHandler<GetInfoByStateCompletedEventArgs> GetInfoByStateCompleted;
        
        public event System.EventHandler<GetInfoByAreaCodeCompletedEventArgs> GetInfoByAreaCodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MobileCalculator.ZipcodeService.USZipSoap.BeginGetInfoByZIP(string USZip, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInfoByZIP(USZip, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement MobileCalculator.ZipcodeService.USZipSoap.EndGetInfoByZIP(System.IAsyncResult result) {
            return base.Channel.EndGetInfoByZIP(result);
        }
        
        private System.IAsyncResult OnBeginGetInfoByZIP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string USZip = ((string)(inValues[0]));
            return ((MobileCalculator.ZipcodeService.USZipSoap)(this)).BeginGetInfoByZIP(USZip, callback, asyncState);
        }
        
        private object[] OnEndGetInfoByZIP(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((MobileCalculator.ZipcodeService.USZipSoap)(this)).EndGetInfoByZIP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInfoByZIPCompleted(object state) {
            if ((this.GetInfoByZIPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInfoByZIPCompleted(this, new GetInfoByZIPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInfoByZIPAsync(string USZip) {
            this.GetInfoByZIPAsync(USZip, null);
        }
        
        public void GetInfoByZIPAsync(string USZip, object userState) {
            if ((this.onBeginGetInfoByZIPDelegate == null)) {
                this.onBeginGetInfoByZIPDelegate = new BeginOperationDelegate(this.OnBeginGetInfoByZIP);
            }
            if ((this.onEndGetInfoByZIPDelegate == null)) {
                this.onEndGetInfoByZIPDelegate = new EndOperationDelegate(this.OnEndGetInfoByZIP);
            }
            if ((this.onGetInfoByZIPCompletedDelegate == null)) {
                this.onGetInfoByZIPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInfoByZIPCompleted);
            }
            base.InvokeAsync(this.onBeginGetInfoByZIPDelegate, new object[] {
                        USZip}, this.onEndGetInfoByZIPDelegate, this.onGetInfoByZIPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MobileCalculator.ZipcodeService.USZipSoap.BeginGetInfoByCity(string USCity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInfoByCity(USCity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement MobileCalculator.ZipcodeService.USZipSoap.EndGetInfoByCity(System.IAsyncResult result) {
            return base.Channel.EndGetInfoByCity(result);
        }
        
        private System.IAsyncResult OnBeginGetInfoByCity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string USCity = ((string)(inValues[0]));
            return ((MobileCalculator.ZipcodeService.USZipSoap)(this)).BeginGetInfoByCity(USCity, callback, asyncState);
        }
        
        private object[] OnEndGetInfoByCity(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((MobileCalculator.ZipcodeService.USZipSoap)(this)).EndGetInfoByCity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInfoByCityCompleted(object state) {
            if ((this.GetInfoByCityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInfoByCityCompleted(this, new GetInfoByCityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInfoByCityAsync(string USCity) {
            this.GetInfoByCityAsync(USCity, null);
        }
        
        public void GetInfoByCityAsync(string USCity, object userState) {
            if ((this.onBeginGetInfoByCityDelegate == null)) {
                this.onBeginGetInfoByCityDelegate = new BeginOperationDelegate(this.OnBeginGetInfoByCity);
            }
            if ((this.onEndGetInfoByCityDelegate == null)) {
                this.onEndGetInfoByCityDelegate = new EndOperationDelegate(this.OnEndGetInfoByCity);
            }
            if ((this.onGetInfoByCityCompletedDelegate == null)) {
                this.onGetInfoByCityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInfoByCityCompleted);
            }
            base.InvokeAsync(this.onBeginGetInfoByCityDelegate, new object[] {
                        USCity}, this.onEndGetInfoByCityDelegate, this.onGetInfoByCityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MobileCalculator.ZipcodeService.USZipSoap.BeginGetInfoByState(string USState, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInfoByState(USState, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement MobileCalculator.ZipcodeService.USZipSoap.EndGetInfoByState(System.IAsyncResult result) {
            return base.Channel.EndGetInfoByState(result);
        }
        
        private System.IAsyncResult OnBeginGetInfoByState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string USState = ((string)(inValues[0]));
            return ((MobileCalculator.ZipcodeService.USZipSoap)(this)).BeginGetInfoByState(USState, callback, asyncState);
        }
        
        private object[] OnEndGetInfoByState(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((MobileCalculator.ZipcodeService.USZipSoap)(this)).EndGetInfoByState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInfoByStateCompleted(object state) {
            if ((this.GetInfoByStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInfoByStateCompleted(this, new GetInfoByStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInfoByStateAsync(string USState) {
            this.GetInfoByStateAsync(USState, null);
        }
        
        public void GetInfoByStateAsync(string USState, object userState) {
            if ((this.onBeginGetInfoByStateDelegate == null)) {
                this.onBeginGetInfoByStateDelegate = new BeginOperationDelegate(this.OnBeginGetInfoByState);
            }
            if ((this.onEndGetInfoByStateDelegate == null)) {
                this.onEndGetInfoByStateDelegate = new EndOperationDelegate(this.OnEndGetInfoByState);
            }
            if ((this.onGetInfoByStateCompletedDelegate == null)) {
                this.onGetInfoByStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInfoByStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetInfoByStateDelegate, new object[] {
                        USState}, this.onEndGetInfoByStateDelegate, this.onGetInfoByStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MobileCalculator.ZipcodeService.USZipSoap.BeginGetInfoByAreaCode(string USAreaCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInfoByAreaCode(USAreaCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement MobileCalculator.ZipcodeService.USZipSoap.EndGetInfoByAreaCode(System.IAsyncResult result) {
            return base.Channel.EndGetInfoByAreaCode(result);
        }
        
        private System.IAsyncResult OnBeginGetInfoByAreaCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string USAreaCode = ((string)(inValues[0]));
            return ((MobileCalculator.ZipcodeService.USZipSoap)(this)).BeginGetInfoByAreaCode(USAreaCode, callback, asyncState);
        }
        
        private object[] OnEndGetInfoByAreaCode(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((MobileCalculator.ZipcodeService.USZipSoap)(this)).EndGetInfoByAreaCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInfoByAreaCodeCompleted(object state) {
            if ((this.GetInfoByAreaCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInfoByAreaCodeCompleted(this, new GetInfoByAreaCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInfoByAreaCodeAsync(string USAreaCode) {
            this.GetInfoByAreaCodeAsync(USAreaCode, null);
        }
        
        public void GetInfoByAreaCodeAsync(string USAreaCode, object userState) {
            if ((this.onBeginGetInfoByAreaCodeDelegate == null)) {
                this.onBeginGetInfoByAreaCodeDelegate = new BeginOperationDelegate(this.OnBeginGetInfoByAreaCode);
            }
            if ((this.onEndGetInfoByAreaCodeDelegate == null)) {
                this.onEndGetInfoByAreaCodeDelegate = new EndOperationDelegate(this.OnEndGetInfoByAreaCode);
            }
            if ((this.onGetInfoByAreaCodeCompletedDelegate == null)) {
                this.onGetInfoByAreaCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInfoByAreaCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetInfoByAreaCodeDelegate, new object[] {
                        USAreaCode}, this.onEndGetInfoByAreaCodeDelegate, this.onGetInfoByAreaCodeCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MobileCalculator.ZipcodeService.USZipSoap CreateChannel() {
            return new USZipSoapClientChannel(this);
        }
        
        private class USZipSoapClientChannel : ChannelBase<MobileCalculator.ZipcodeService.USZipSoap>, MobileCalculator.ZipcodeService.USZipSoap {
            
            public USZipSoapClientChannel(System.ServiceModel.ClientBase<MobileCalculator.ZipcodeService.USZipSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetInfoByZIP(string USZip, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = USZip;
                System.IAsyncResult _result = base.BeginInvoke("GetInfoByZIP", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetInfoByZIP(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetInfoByZIP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInfoByCity(string USCity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = USCity;
                System.IAsyncResult _result = base.BeginInvoke("GetInfoByCity", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetInfoByCity(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetInfoByCity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInfoByState(string USState, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = USState;
                System.IAsyncResult _result = base.BeginInvoke("GetInfoByState", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetInfoByState(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetInfoByState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInfoByAreaCode(string USAreaCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = USAreaCode;
                System.IAsyncResult _result = base.BeginInvoke("GetInfoByAreaCode", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetInfoByAreaCode(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetInfoByAreaCode", _args, result)));
                return _result;
            }
        }
    }
}
